{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst values = document.querySelectorAll('.value');\nconst input = document.querySelector('.timer-input');\nconst btn = document.querySelector('.timer-btn');\nbtn.disabled = true;\n\nconst INTERVAL = 1000;\nlet userSelectedDate;\nlet timer;\n\nconst fp = flatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const currentTimestamp = Date.now();\n    const selectedTimestamp = new Date(selectedDates[0]).getTime();\n    if (selectedTimestamp > currentTimestamp) {\n      userSelectedDate = selectedTimestamp - currentTimestamp;\n      btn.disabled = false;\n    } else {\n      alertMessage('Invalid date:', 'Please choose a date in the future');\n      btn.disabled = true;\n    }\n  },\n});\n\nbtn.addEventListener('click', (e) => {\n  input.disabled = true;\n  btn.disabled = true;\n  startCountdown();\n});\n\nfunction startCountdown() {\n  timer = setInterval(() => {\n    userSelectedDate -= INTERVAL;\n    const parsedDate = convertMs(userSelectedDate);\n    values.forEach((value) => {\n      const key = Object.keys(value.dataset)[0];\n      value.innerText = addLeadingZero(parsedDate[key].toString());\n    });\n    if (userSelectedDate < INTERVAL) {\n      clearInterval(timer);\n      input.disabled = false;\n    }\n  }, INTERVAL);\n}\n\nfunction addLeadingZero(value) {\n  return value.padStart(2, '0');\n}\n\nfunction alertMessage(title, message) {\n  iziToast.error({\n    title: title,\n    message: message,\n    titleSize: 20,\n    messageSize: 20,\n    position: 'topRight'\n  });\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["values","input","btn","INTERVAL","userSelectedDate","timer","flatpickr","selectedDates","currentTimestamp","selectedTimestamp","alertMessage","startCountdown","parsedDate","convertMs","value","key","addLeadingZero","title","message","iziToast","ms","days","hours","minutes","seconds"],"mappings":"2FAKA,MAAMA,EAAS,SAAS,iBAAiB,QAAQ,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAM,SAAS,cAAc,YAAY,EAC/CA,EAAI,SAAW,GAEf,MAAMC,EAAW,IACjB,IAAIC,EACAC,EAEOC,EAAU,mBAAoB,CACvC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAmB,KAAK,MACxBC,EAAoB,IAAI,KAAKF,EAAc,CAAC,CAAC,EAAE,UACjDE,EAAoBD,GACtBJ,EAAmBK,EAAoBD,EACvCN,EAAI,SAAW,KAEfQ,EAAa,gBAAiB,oCAAoC,EAClER,EAAI,SAAW,GAElB,CACH,CAAC,EAEDA,EAAI,iBAAiB,QAAU,GAAM,CACnCD,EAAM,SAAW,GACjBC,EAAI,SAAW,GACfS,GACF,CAAC,EAED,SAASA,GAAiB,CACxBN,EAAQ,YAAY,IAAM,CACxBD,GAAoBD,EACpB,MAAMS,EAAaC,EAAUT,CAAgB,EAC7CJ,EAAO,QAASc,GAAU,CACxB,MAAMC,EAAM,OAAO,KAAKD,EAAM,OAAO,EAAE,CAAC,EACxCA,EAAM,UAAYE,EAAeJ,EAAWG,CAAG,EAAE,SAAQ,CAAE,CACjE,CAAK,EACGX,EAAmBD,IACrB,cAAcE,CAAK,EACnBJ,EAAM,SAAW,GAEpB,EAAEE,CAAQ,CACb,CAEA,SAASa,EAAeF,EAAO,CAC7B,OAAOA,EAAM,SAAS,EAAG,GAAG,CAC9B,CAEA,SAASJ,EAAaO,EAAOC,EAAS,CACpCC,EAAS,MAAM,CACb,MAAOF,EACP,QAASC,EACT,UAAW,GACX,YAAa,GACb,SAAU,UACd,CAAG,CACH,CAEA,SAASL,EAAUO,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}